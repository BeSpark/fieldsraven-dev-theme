<script type="text/javascript">
  var pageMetafieldParams = {
    object_type: 'page',
    object_id: {{ page.id }},
    namespace: 'fields_raven',
    key: `key ${Date.now()}`,
    value: `value ${Date.now()}`,
    value_type: 'single_line_text_field'
  }

  var shopMetafieldParams = {
    object_type: 'shop',
    {% comment %}object_id: {{ page.id }},{% endcomment %}
    namespace: 'fields_raven',
    key: `key ${Date.now()}`,
    value: `value ${Date.now()}`,
    value_type: 'single_line_text_field'
  }

  var pageJSONMetafieldParams = {
    object_type: 'page',
    object_id: {{ page.id }},
    namespace: 'fields_raven',
    key: 'json_example',
    value: JSON.stringify({"color": "blue","size": "large","updated_at": Date.now()}),
    value_type: 'json'
  }

  var pageNumberDecimalMetafieldParams = {
    object_type: 'page',
    object_id: {{ page.id }},
    namespace: 'fields_raven',
    key: 'number_decimal_example',
    value: 9.75,
    value_type: 'number_decimal'
  }

  var pageTitleParams = {
    object_type: 'page',
    object_id: {{ page.id }},
    namespace: 'global',
    key: `title_tag`,
    value: `Storefront Kit Example (${Date.now()})`,
    value_type: 'single_line_text_field'
  }


  {% liquid
    assign seo_hidden_value = page.metafields.seo.hidden.value
    case seo_hidden_value
      when 0
        assign hide_show_value = 1
        assign hide_show_text = 'Hide'
      when 1
        assign hide_show_value = 0
        assign hide_show_text = 'Show'
      else
        assign hide_show_value = 1
        assign hide_show_text = 'Hide'
      endcase
  %}

  var pageSEOHideParams = {
    object_type: 'page',
    object_id: {{ page.id }},
    namespace: 'seo',
    key: 'hidden',
    value: {{ hide_show_value }},
    value_type: 'number_integer'
  }
</script>

<section x-data="{
  fieldsRavenDataSubmit(params) {
    const response = FieldsRaven.metafieldCreateUpdate(params);
    response.then(res => {
      console.log('ðŸ›‘ res: ', res)
      console.log('ðŸ›‘ typeof res: ', typeof res)
      console.log('ðŸ›‘ res.status: ', res.status)
      console.log('ðŸ›‘ res.status === 200 ', res.status === 200)
      console.log('ðŸ›‘ res.json: ', res.json)
      if (res.status === 200) {
        setTimeout(() => (location.reload()), 3000)
      } else {
        console.error('ðŸ›‘ res.json: ', res.json)
      }
    })
    .catch(e => console.error(e));
  },
  FieldsRavenSeoTitle(object_type, object_id, new_title) {
    const response = FieldsRaven.seoTitle(object_type, object_id, new_title);
    response.then(res => {
      console.log('ðŸ›‘ res: ', res)
      console.log('ðŸ›‘ typeof res: ', typeof res)
      console.log('ðŸ›‘ res.status: ', res.status)
      console.log('ðŸ›‘ res.status === 200 ', res.status === 200)
      console.log('ðŸ›‘ res.json: ', res.json)
      if (res.status === 200) {
        setTimeout(() => (location.reload()), 3000)
      } else {
        console.error('ðŸ›‘ res.json: ', res.json)
      }
    })
    .catch(e => console.error(e));
  },
  FieldsRavenSitemapHideShow(object_type, object_id, value) {
    const response = FieldsRaven.sitemapHideShow(object_type, object_id, value);
    response.then(res => {
      console.log('ðŸ›‘ res: ', res)
      console.log('ðŸ›‘ typeof res: ', typeof res)
      console.log('ðŸ›‘ res.status: ', res.status)
      console.log('ðŸ›‘ res.status === 200 ', res.status === 200)
      console.log('ðŸ›‘ res.json: ', res.json)
      if (res.status === 200) {
        setTimeout(() => (location.reload()), 3000)
      } else {
        console.error('ðŸ›‘ res.json: ', res.json)
      }
    })
    .catch(e => console.error(e));
  }
}"
  x-init="console.log('FieldaRaven Storefront Kit example')"
>
  <h3>Add text metafield to the page</h3>
  <fieldset>
    <legend>Page random metafields</legend>
    <code>
      {{ page.metafields.fields_raven }}
    </code><br>
  </fieldset>
  <button @click="fieldsRavenDataSubmit(pageMetafieldParams)">Create/update page metafield!</button>
  <hr>
  <h3>Add JSON metafield to the page</h3>
  <fieldset>
    <legend>Page JSON metafield example</legend>
    <code>
      {{ page.metafields.fields_raven.json_example.value }}
    </code><br>
  </fieldset>
  <button @click="fieldsRavenDataSubmit(pageJSONMetafieldParams)">Create/update page JSON metafield!</button>
  <hr>
  <h3>Add number_decimal metafield to the page</h3>
  <fieldset>
    <legend>Page number_decimal metafield example</legend>
    <code>
      {{ page.metafields.fields_raven.number_decimal_example.value }}
    </code><br>
  </fieldset>
  <button @click="fieldsRavenDataSubmit(pageNumberDecimalMetafieldParams)">Create/update page JSON metafield!</button>
  <hr>
  <h3>Chanage page title (by adding a time stamp at the end of the title)</h3>
  <fieldset>
    <legend>Page title</legend>
    <code>{{ page_title }}</code><br>
  </fieldset>
  <button @click="FieldsRavenSeoTitle('page', {{page.id}}, pageTitleParams.value)">Create/update page metafield!</button>
  <hr>
  <h3>Hide page from search engines and sitemap</h3>
  <fieldset>
    <legend>Page SEO hidden value</legend>
    <code>
      {% if page.metafields.seo.hidden.value %}
        {{ seo_hidden_value }}
      {% else %}
        No value found.
      {% endif %}
    </code><br>
  </fieldset>
  <button @click="FieldsRavenSitemapHideShow('page', {{page.id}}, {{ hide_show_value }})">
    {{ hide_show_text }} page on sitemap!
  </button>
  <hr>
  <h3>Shop metafields</h3>
  <fieldset>
    <legend>Shop metafields values</legend>
    <code>
      {% if shop.metafields.fields_raven != blank %}
        {% for metafield in shop.metafields.fields_raven %}
          {{ metafield | first }}: {{ metafield | last }}<br>
        {% endfor %}
      {% else %}
        No value found.
      {% endif %}
    </code><br>
  </fieldset>
  <button @click="fieldsRavenDataSubmit(shopMetafieldParams)">
    Create/update shop metafield!
  </button>
  {% comment %}
  <hr>
  <script type="text/javascript">
    window.addEventListener('FieldsRaven:ready', (event) => {
      fieldsRavenDataSubmit = (params) => {
        const response = FieldsRaven.metafieldCreateUpdate(params);
        response.then(res => {
          if (res.status === 200) {
            alert(`ðŸŽ‰ res.json`)
            console.log('ðŸŽ‰', res.json)
          } else {
            console.error('ðŸ˜ž', res.json)
          }
        })
        .catch(e => console.error(e));
      }
    });
  </script>

  <div id="fieldsraven-demo" onclick="fieldsRavenDataSubmit(pageMetafieldParams)">Create metafield!</div>
  {% endcomment %}
  <script type="text/javascript">
    ravenSubmit = (value) => {
      const ravenObj = {%- render 'raven-mac-gen', resource_id: page.id, raven_id: 'w7un4mY' -%};
      const valueObj = { value: value };
      const response = Raven.send(ravenObj, valueObj);
      response.then(res => {
        if (res.status === 200) {
          console.log('ðŸŽ‰', res.json)
        } else {
          console.error('ðŸ˜ž', res.json)
        }
      })
      .catch(e => console.error(e));
    }
  </script>
  <fieldset>
    <legend>New payload test</legend>
    <button id="fieldsraven-demo" onclick="ravenSubmit('Hello raven!')">Send a Raven!</button>
  </fieldset>
  <hr>
  <fieldset>
    <script type="text/javascript">
      ravenShopSubmit = (value) => {
        const ravenObj = {%- render 'raven-mac-gen', resource_id: 'shop', raven_id: 'd9soXoU' -%};
        const valueObj = { value: value };
        const response = Raven.send(ravenObj, valueObj);
        response.then(res => {
          if (res.status === 200) {
            console.log('ðŸŽ‰', res.json)
          } else {
            console.error('ðŸ˜ž', res.json)
          }
        })
        .catch(e => console.error(e));
      }
    </script>
    <legend>New shop raven</legend>
    <button id="fieldsraven-demo" onclick='ravenShopSubmit(JSON.stringify({"hello": "shop","updated_at": Date.now()}))'>Send a Shop Raven!</button>
  </fieldset>
</section>
